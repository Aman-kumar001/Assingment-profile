{"version":3,"sources":["components/Card.jsx","App.js","reportWebVitals.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","style","makeStyles","container","backgroundColor","paddingTop","card","margin","marginTop","borderRadius","image","display","borderTopLeftRadius","borderTopRightRadius","Card","data","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","classes","tiltStyle","marginLeft","className","src","results","picture","medium","alt","name","title","first","last","gender","dob","age","location","city","country","login","username","textAlign","position","top","email","cell","pending","loop","App","setLoop","all","setall","fetch","then","res","json","console","log","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95d2adaf.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport LocalPhoneIcon from '@material-ui/icons/LocalPhone';\r\nimport Tilt from \"react-vanilla-tilt\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\nconst style=makeStyles({\r\n    container:{\r\n        width:\"100vw\",\r\n        height:\"80vh\",\r\n        backgroundColor:\"#FFEE93\",\r\n        paddingTop:\"20vh\",\r\n         \r\n    },\r\n    card:{\r\n        width:\"35vw\",\r\n        height:\"55vh\",\r\n        margin:\"auto\",\r\n        marginTop:0,\r\n        backgroundColor:\"#FCF5C7\",\r\n        borderRadius:\"20px\",\r\n        \"@media only screen and (max-width: 800px)\":{\r\n            width:\"60vw\",\r\n            height:\"60vh\",\r\n        },\r\n        \"@media only screen and (max-width: 400px)\":{\r\n            width:\"80vw\",\r\n            height:\"70vh\",\r\n        },\r\n    },\r\n    image:{\r\n        height:\"20vh\",\r\n        display:\"flex\",\r\n        backgroundColor:\"#FFC09F\",\r\n        borderTopLeftRadius:\"20px\",\r\n        borderTopRightRadius:\"20px\",\r\n        \"@media only screen and (max-width: 800px)\":{\r\n            height:\"28vh\",\r\n        },\r\n        \"@media only screen and (max-width: 400px)\":{\r\n            height:\"30vh\",\r\n        },\r\n    }\r\n})\r\n\r\n\r\n\r\nconst Card = ({data}) => {\r\n    const { height, width } = useWindowDimensions();\r\n    const classes=style();\r\n    const tiltStyle={\r\n        backgroundColor:\"#FFEE93\",\r\n        width:`${width>400?(width>800?\"35vw\":\"60vw\"):(\"80vw\")}`,\r\n        marginLeft:`${width>400?(width>800?\"35vw\":\"20vw\"):(\"10vw\")}`,\r\n        borderRadius:\"20px\"\r\n    }\r\n    return ( \r\n        <div className={classes.container}>\r\n            <Tilt style={tiltStyle}>\r\n            <div className={classes.card}>\r\n                <div className={classes.image}>\r\n                    <div className=\"topLeft\">\r\n                          <img src={data.results[0].picture.medium} alt=\"\" className=\"pic\"/>  \r\n                    </div>\r\n                    <div className=\"topRight\">\r\n                        <p\r\n                            className=\"name\"\r\n                        >{data.results[0].name.title} {data.results[0].name.first} {data.results[0].name.last}</p>\r\n                        <p className=\"gender\">{data.results[0].gender} ,  {data.results[0].dob.age}\r\n                        </p>\r\n                        <p className=\"location\">\r\n                            {data.results[0].location.city} , {data.results[0].location.country}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <p>\r\n                        User Name:<b> {data.results[0].login.username}</b> \r\n                    </p>\r\n                    <h2 style={{textAlign:\"center\"}}>Contacts</h2>\r\n                    <p className=\"mail\"><MailOutlineIcon style={{position:\"relative\",top:\"5px\"}}/> {data.results[0].email}</p>\r\n                    <p className=\"phone\"> <LocalPhoneIcon style={{position:\"relative\",top:\"5px\"}}/> {data.results[0].cell}</p>\r\n                    \r\n                </div>\r\n            </div>\r\n            </Tilt>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Card;","import { makeStyles } from '@material-ui/core';\nimport './App.css';\nimport Card from './components/Card';\nimport { useState,useEffect } from 'react';\nconst style=makeStyles({\n  pending:{\n    width:\"100vw\",\n    height:\"80vh\",\n    backgroundColor:\"#FFEE93\",\n    paddingTop:\"20vh\",\n  },\n  loop:{\n\n  },\n\n})\n\nfunction App() {\n  const classes=style();\n  const [loop,setLoop]=useState(false);\n  const url=\"https://randomuser.me/api/\";\n  const [all,setall]=useState([]);\n  useEffect(() => {\n      fetch(url)\n      .then(res=>{return res.json()})\n      .then(data=>setall(data))\n      setLoop(true)\n  }, [])\n  console.log(all);\n  return (\n    <div className=\"App\">\n      {all.length!==0 && <Card data={all}/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}